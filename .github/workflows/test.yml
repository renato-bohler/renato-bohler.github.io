name: Test

on:
  pull_request:
    types:
      - opened
      - synchronize

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Test
        run: yarn test

  visual-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
          fetch-depth: 0
      - uses: ./.github/actions/setup
      - name: Visual Regression Test
        run: |
          yarn playwright install chromium
          yarn test:e2e
      - name: Update snapshots
        if: failure()
        run: yarn test:e2e --update-snapshots
      - name: Commit & Push changes
        if: failure()
        uses: actions-js/push@v1.4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          message: 'test: updates snapshots [skip ci]'
          branch: ${{ github.head_ref }}

  eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: ESLint
        run: yarn lint

  stylelint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Stylelint
        run: yarn stylelint

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - name: Build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NEXT_PUBLIC_CONTACT_ENDPOINT: https://kixlofqgt4ph6k5zgdbtese7pa0dqwka.lambda-url.us-east-1.on.aws
        run: yarn build
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: out
          path: out

  validate:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
        with:
          install-dependencies: false
      - uses: actions/download-artifact@v3
        with:
          name: out
          path: out
      - name: Validate HTML
        run: |
          npx nu-html-checker -f json ./out/index.html > ./validation-report.json
          ERROR_COUNT=$(cat ./validation-report.json | grep '"type": "error"' -c || ERROR_COUNT=0)

          if [ $ERROR_COUNT = 0 ]; then
            echo "No errors found"
            exit 0
          else
            cat ./validation-report.json
            echo "$ERROR_COUNT error(s) found!"
            exit 1
          fi
